spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.10.44:3306/user_cd_1?useSSL=FALSE&serverTimezone=GMT%2B8
        username: root
        password: 123456
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.10.44:3306/user_my_1?useSSL=FALSE&serverTimezone=GMT%2B8
        username: root
        password: 123456
    sharding:
      tables:
        toca:
          actual-data-nodes: ds$->{0..1}.toca_$->{1..3}
          ## 指定分库规则
          database-strategy:
            #            inline:
            #              sharding-column: user_id
            #              algorithm-expression: ds$->{user_id % 2}
            hint:
              algorithmClassName: com.lvmoney.demo.sharding.algorithm.HintSharding
          ## 指定分表规则
          table-strategy:
            hint:
              algorithmClassName: com.lvmoney.demo.sharding.algorithm.HintSharding
          key-generator:
            column: id
            type: SNOWFLAKE

      ## 绑定主表与子表，避免关联查询导致的全数据源路由
      binding-tables: toca

      ## 配置广播表：以广播的形式保存（如果只涉及查询的话可以不配置，会随机取一个数据源）
      broadcast-tables: t_config

    ## 打印sql
    props:
      sql:
        show: true