<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>lvmoney-frame-parent</artifactId>
        <groupId>com.lvmoney.frame</groupId>
        <version>1.0.RELEASE</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>lvmoney-frame-bom</artifactId>
    <properties>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <spring.version>5.1.2.RELEASE</spring.version>
        <springboot.version>2.1.0.RELEASE</springboot.version>
        <mariadb.java.client>2.2.1</mariadb.java.client>
        <alibaba.druid>1.1.22</alibaba.druid>
        <mybatis.version>3.4.6</mybatis.version>
        <mybatisSpring.version>1.3.2</mybatisSpring.version>
        <ignite.version>2.6.0</ignite.version>
        <junit.version>4.13</junit.version>
        <fastjson.version>1.2.56</fastjson.version>
        <jwt.version>0.9.0</jwt.version>
        <hibernateValidator.version>5.3.6.Final</hibernateValidator.version>
        <swagger2.version>2.9.2</swagger2.version>
        <servlet.version>3.1.0</servlet.version>
        <java.version>1.8</java.version>
        <maven.compiler.vesion>3.6.0</maven.compiler.vesion>
        <javax.validation.version>2.0.1.Final</javax.validation.version>
        <ampq.verion>2.1.0.RELEASE</ampq.verion>
        <boot.security.version>2.1.0.RELEASE</boot.security.version>
        <httpclient.version>4.5.6</httpclient.version>
        <commons.codec.version>1.11</commons.codec.version>
        <commons.lang3.version>3.8</commons.lang3.version>
        <commons.io.version>2.6</commons.io.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons.pool2.version>2.5.0</commons.pool2.version>
        <mysql.connector.version>8.0.16</mysql.connector.version>
        <mybatis.generator.version>1.3.2</mybatis.generator.version>
        <mybatis.plus.boot.verson>3.0.5</mybatis.plus.boot.verson>
        <drools.version>7.14.0.Final</drools.version>
        <zxing.version>3.3.0</zxing.version>
        <scheduler.version>2.3.0</scheduler.version>
        <java.jwt.version>3.4.0</java.jwt.version>
        <tomcat.embed.jasper.version>9.0.7</tomcat.embed.jasper.version>
        <lombok.version>1.18.4</lombok.version>
        <pagehelper.version>1.2.9</pagehelper.version>
        <freemarker.version>2.3.28</freemarker.version>
        <jolokia.version>1.6.0</jolokia.version>
        <aspectjweaver.version>1.9.2</aspectjweaver.version>
        <jaxb.api.version>2.3.0</jaxb.api.version>
        <oauth2.autoconfigure.version>2.1.0.RELEASE</oauth2.autoconfigure.version>
        <oauth.cloud.version>2.1.0.RELEASE</oauth.cloud.version>
        <boot.thymeleaf.version>2.1.0.RELEASE</boot.thymeleaf.version>
        <boot.oauth2.verion>2.3.6.RELEASE</boot.oauth2.verion>
        <thymeleaf.extras.springsecurity4.version>3.0.0.RELEASE</thymeleaf.extras.springsecurity4.version>
        <hibernate.jpa.api.version>1.0.2</hibernate.jpa.api.version>
        <cloud.version>2.1.0.RELEASE</cloud.version>
        <jasper.version>8.5.5</jasper.version>
        <velocity.engine.version>2.0</velocity.engine.version>
        <jodconverter.verion>4.1.0</jodconverter.verion>
        <easyopi.version>3.2.0</easyopi.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <caffeine.version>2.7.0</caffeine.version>
        <pinyin4j.version>2.5.1</pinyin4j.version>
        <cglib.version>3.2.10</cglib.version>
        <beanutils.version>1.9.4</beanutils.version>
        <boot.dozer.version>6.4.1</boot.dozer.version>
        <google.gson.version>2.8.3</google.gson.version>
        <github.feign.version>10.1.0</github.feign.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <fastjson.version>1.2.59</fastjson.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <velocity.version>1.7</velocity.version>
        <mybatis-plus-boot-starter.version>3.3.0</mybatis-plus-boot-starter.version>
        <commons-io.version>2.7</commons-io.version>
        <reflections.version>0.9.11</reflections.version>
        <commons-codec.version>1.12</commons-codec.version>
        <commons-net.version>3.6</commons-net.version>
        <jansi.version>1.18</jansi.version>
        <lombok.version>1.18.8</lombok.version>
        <commons-pool2.version>2.6.2</commons-pool2.version>
        <jwt.version>0.9.1</jwt.version>
        <spring-boot-admin.version>2.1.6</spring-boot-admin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <hutool.version>5.4.5</hutool.version>
        <guava.version>30.0-jre</guava.version>
        <commons.text.version>1.6</commons.text.version>
        <commons.collections4.version>4.1</commons.collections4.version>
        <boot.redis.version>2.1.0.RELEASE</boot.redis.version>
        <boot.cache.verion>2.1.0.RELEASE</boot.cache.verion>
        <jackson.version>2.10.0</jackson.version>
        <shiro.spring.version>1.7.0</shiro.spring.version>
        <spring.kafka.version>2.2.0.RELEASE</spring.kafka.version>
        <sharding.jdbc.version>4.0.1</sharding.jdbc.version>
        <revengemission.captcha.verion>0.7</revengemission.captcha.verion>
        <penggle.kaptcha.version>2.3.2</penggle.kaptcha.version>
        <redisson.version>3.6.5</redisson.version>
        <maven.model.version>3.0</maven.model.version>
        <fegin.form.verion>3.7.0</fegin.form.verion>
        <config.monitor.version>2.1.0.RELEASE</config.monitor.version>
        <cloud.bus.amqp.version>2.1.0.RELEASE</cloud.bus.amqp.version>
        <config.server.version>2.1.0.RELEASE</config.server.version>
        <config.client.version>2.1.0.RELEASE</config.client.version>
        <poi.tl.version>1.3.1</poi.tl.version>
        <boot.mail.version>2.1.0.RELEASE</boot.mail.version>
        <logback.more.appenders.version>1.7.0</logback.more.appenders.version>
        <fluent.logger.version>0.3.4</fluent.logger.version>
        <ribbon.version>1.4.6.RELEASE</ribbon.version>
        <nacos.client.version>1.1.1</nacos.client.version>
        <apache.dubbo.version>2.7.3</apache.dubbo.version>
        <spring-security-jwt.version>1.0.10.RELEASE</spring-security-jwt.version>
        <nimbus-jose-jwt.version>7.9</nimbus-jose-jwt.version>
        <netflix.feign.version>8.18.0</netflix.feign.version>
        <cloud-hystrix>1.4.6.RELEASE</cloud-hystrix>
        <spring-security-core.version>5.1.11.RELEASE</spring-security-core.version>
        <feign-httpclient.version>8.18.0</feign-httpclient.version>
        <kubernetes-client.version>4.4.0</kubernetes-client.version>
        <kubernetes-model.version>4.4.0</kubernetes-model.version>
        <fabric-utils.version>2.0.46</fabric-utils.version>
        <kubernetes-api.version>3.0.11</kubernetes-api.version>
        <snakeyaml.version>1.25</snakeyaml.version>
        <ganymed-ssh2.version>build210</ganymed-ssh2.version>
        <maven-model.version>3.0</maven-model.version>
        <micrometer-registry-prometheus.version>1.2.0</micrometer-registry-prometheus.version>
        <zipkin.version>2.12.1</zipkin.version>
        <archaius-core.version>0.7.6</archaius-core.version>
        <reactor-test.version>3.3.0.RELEASE</reactor-test.version>
        <sharding-jdbc.version>4.0.1</sharding-jdbc.version>
        <uid-generator.version>0.0.4-RELEASE</uid-generator.version>
        <testng.version>7.1.0</testng.version>
        <elasticsearch.version>2.1.0.RELEASE</elasticsearch.version>
        <elasticsearch.client.version>7.6.2</elasticsearch.client.version>
        <elasticsearch.high.client.version>7.6.2</elasticsearch.high.client.version>
        <nacos.config.version>0.9.0.RELEASE</nacos.config.version>
        <boot.mongo.version>2.1.0.RELEASE</boot.mongo.version>
        <canal.version>1.1.3</canal.version>
        <cassandra.spring.data.version>2.1.0.RELEASE</cassandra.spring.data.version>
        <jasypt.version>3.0.0</jasypt.version>
        <activiti.version>6.0.0</activiti.version>
        <maven-surefire-plugin.version>2.12.4</maven-surefire-plugin.version>
        <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
        <yaml.jackson.version>2.11.0</yaml.jackson.version>
        <itext-pdf.version>5.5.13</itext-pdf.version>
        <itext-asian.version>5.2.0</itext-asian.version>
        <flume.version>1.9.0</flume.version>
        <logstash-logback-encoder.version>6.1</logstash-logback-encoder.version>
        <RoaringBitmap.version>0.9.0</RoaringBitmap.version>

        <cos_api.version>5.4.5</cos_api.version>
        <opentracing.zipkin.version>0.1.4</opentracing.zipkin.version>
        <micrometer.prometheus.version>1.3.0</micrometer.prometheus.version>
        <alibaba-sentinel.version>2.1.0.RELEASE</alibaba-sentinel.version>
        <sentinel-datasource-nacos.version>1.7.2</sentinel-datasource-nacos.version>
        <weixin.binarywang.version>4.0.0</weixin.binarywang.version>
        <cxf-spring-boot.version>3.2.1</cxf-spring-boot.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-cassandra</artifactId>
                <version>${cassandra.spring.data.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.elasticsearch.client/elasticsearch-rest-high-level-client -->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.high.client.version}</version>
            </dependency>

            <!-- canal -->
            <dependency>
                <groupId>com.alibaba.otter</groupId>
                <artifactId>canal.client</artifactId>
                <version>${canal.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.otter</groupId>
                <artifactId>canal.protocol</artifactId>
                <version>${canal.version}</version>
            </dependency>
            <!-- canal -->

            <!-- apache commons start -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>


            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <!-- apache commons end -->

            <!--开启springboot 健康监控 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jetty</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>


            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernateValidator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch.client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
            </dependency>


            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${httpclient.version}</version>
            </dependency>


            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${jackson.version}</version>
            </dependency>


            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${mariadb.java.client}</version>
            </dependency>
            <!-- alibaba的druid数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${alibaba.druid}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${alibaba.druid}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis.generator.version}</version>
            </dependency>


            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.version}</version>
            </dependency>


            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${boot.security.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-oauth2</artifactId>
                <version>${oauth.cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${boot.oauth2.verion}</version>
            </dependency>


            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectjweaver.version}</version>
            </dependency>


            <!-- 用于对配置文件进行加密 -->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security.oauth.boot</groupId>
                <artifactId>spring-security-oauth2-autoconfigure</artifactId>
                <version>${oauth2.autoconfigure.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${boot.thymeleaf.version}</version>
            </dependency>

            <dependency>
                <groupId>org.thymeleaf.extras</groupId>
                <artifactId>thymeleaf-extras-springsecurity4</artifactId>
                <version>${thymeleaf.extras.springsecurity4.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.engine.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jodconverter</groupId>
                <artifactId>jodconverter-spring-boot-starter</artifactId>
                <version>${jodconverter.verion}</version>
            </dependency>


            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easyopi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-web</artifactId>
                <version>${easyopi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-annotation</artifactId>
                <version>${easyopi.version}</version>
            </dependency>
            <!-- springcloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-consul-discovery</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${cloud.version}</version>
            </dependency>


            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>${pinyin4j.version}</version>
            </dependency>

            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${beanutils.version}</version>
            </dependency>


            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${google.gson.version}</version>
            </dependency>


            <!-- log -->
            <dependency>
                <groupId>com.sndyuk</groupId>
                <artifactId>logback-more-appenders</artifactId>
                <version>${logback.more.appenders.version}</version>
            </dependency>

            <dependency>
                <groupId>org.fluentd</groupId>
                <artifactId>fluent-logger</artifactId>
                <version>${fluent.logger.version}</version>
            </dependency>

            <!-- mybatis-plus begin -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>${velocity.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- alibaba end -->


            <!-- swagger start -->

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>


            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.fusesource.jansi</groupId>
                <artifactId>jansi</artifactId>
                <version>${jansi.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.dozermapper</groupId>
                <artifactId>dozer-spring-boot-starter</artifactId>
                <version>${boot.dozer.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons.text.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collections4.version}</version>
            </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java.jwt.version}</version>
            </dependency>

            <!-- reids -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${boot.redis.version}</version>
            </dependency>

            <dependency><!--设置reids配置需要的依赖包-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${boot.cache.verion}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.spring.version}</version>
            </dependency>

            <!-- 引入mq -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${ampq.verion}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring.kafka.version}</version>
            </dependency>


            <dependency>
                <groupId>com.revengemission.commons</groupId>
                <artifactId>captcha</artifactId>
                <version>${revengemission.captcha.verion}</version>
            </dependency>


            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign.form</groupId>
                <artifactId>feign-form</artifactId>
                <version>${fegin.form.verion}</version>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign.form</groupId>
                <artifactId>feign-form-spring</artifactId>
                <version>${fegin.form.verion}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.netflix.feign/feign-gson -->
            <dependency>
                <groupId>com.netflix.feign</groupId>
                <artifactId>feign-gson</artifactId>
                <version>${netflix.feign.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/io.github.openfeign/feign-gson -->
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-gson</artifactId>
                <version>${github.feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-core</artifactId>
                <version>${github.feign.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${config.server.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-client</artifactId>
                <version>${config.client.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-monitor</artifactId>
                <version>${config.monitor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bus-amqp</artifactId>
                <version>${cloud.bus.amqp.version}</version>
            </dependency>

            <dependency>
                <groupId>com.deepoove</groupId>
                <artifactId>poi-tl</artifactId>
                <version>${poi.tl.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>${boot.mail.version}</version>
            </dependency>

            <!-- springboot mongodb -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${boot.mongo.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${springboot.version}</version>
            </dependency>


            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-autoconfigure -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${springboot.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-ribbon</artifactId>
                <version>${ribbon.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${apache.dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${apache.dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-registry-nacos</artifactId>
                <version>${apache.dubbo.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos.client.version}</version>
            </dependency>


            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>${spring-security-jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix-turbine</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix</artifactId>
                <version>${cloud-hystrix}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring-security-core.version}</version>
            </dependency>


            <dependency>
                <groupId>com.netflix.feign</groupId>
                <artifactId>feign-httpclient</artifactId>
                <version>${feign-httpclient.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-actuator-autoconfigure</artifactId>
                <version>${springboot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <version>${springboot.version}</version>
            </dependency>


            <!-- https://mvnrepository.com/artifact/io.fabric8/kubernetes-client -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-client</artifactId>
                <version>${kubernetes-client.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.fabric8/kubernetes-model -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-model</artifactId>
                <version>${kubernetes-model.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.fabric8/fabric-utils -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric-utils</artifactId>
                <version>${fabric-utils.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.fabric8/kubernetes-api -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-api</artifactId>
                <version>${kubernetes-api.version}</version>
            </dependency>


            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/ch.ethz.ganymed/ganymed-ssh2 -->
            <dependency>
                <groupId>ch.ethz.ganymed</groupId>
                <artifactId>ganymed-ssh2</artifactId>
                <version>${ganymed-ssh2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-model</artifactId>
                <version>${maven-model.version}</version>
            </dependency>

            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer-registry-prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-server</artifactId>
                <version>${zipkin.version}</version>
            </dependency>

            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-autoconfigure-ui</artifactId>
                <version>${zipkin.version}</version>
            </dependency>

            <dependency>
                <groupId>com.netflix.archaius</groupId>
                <artifactId>archaius-core</artifactId>
                <version>${archaius-core.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/io.projectreactor/reactor-test -->
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-test</artifactId>
                <version>${reactor-test.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.shardingsphere/sharding-jdbc-core -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-core</artifactId>
                <version>${sharding-jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
                <version>${sharding-jdbc.version}</version>

            </dependency>

            <dependency>
                <groupId>com.xfvape.uid</groupId>
                <artifactId>uid-generator</artifactId>
                <version>${uid-generator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.testng/testng -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${nacos.config.version}</version>
            </dependency>

            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-core</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-compiler</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-decisiontables</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-templates</artifactId>
                <version>${drools.version}</version>
            </dependency>

            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-api</artifactId>
                <version>${drools.version}</version>
            </dependency>

            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring-boot-starter-basic</artifactId>
                <version>${activiti.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${yaml.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-properties</artifactId>
                <version>${yaml.jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${itext-pdf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itext-asian</artifactId>
                <version>${itext-asian.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-sinks</artifactId>
                <version>${flume.version}</version>
                <type>pom</type>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.flume/flume-ng-core -->
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-core</artifactId>
                <version>${flume.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.flume/flume-ng-configuration -->
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-configuration</artifactId>
                <version>${flume.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.flume/flume-ng-sdk -->
            <dependency>
                <groupId>org.apache.flume</groupId>
                <artifactId>flume-ng-sdk</artifactId>
                <version>${flume.version}</version>
            </dependency>

            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>

            <dependency>
                <groupId>org.roaringbitmap</groupId>
                <artifactId>RoaringBitmap</artifactId>
                <version>${RoaringBitmap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>cos_api</artifactId>
                <version>${cos_api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-sleuth-zipkin</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-sleuth</artifactId>
                <version>${cloud.version}</version>
            </dependency>


            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>opentracing-spring-zipkin-web-starter</artifactId>
                <version>${opentracing.zipkin.version}</version>
            </dependency>


            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.prometheus.version}</version>
            </dependency>


            <!-- https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-sentinel -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
                <version>${alibaba-sentinel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-nacos</artifactId>
                <version>${sentinel-datasource-nacos.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.alibaba.csp/sentinel-transport-simple-http -->
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-transport-simple-http</artifactId>
                <version>${sentinel-datasource-nacos.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-miniapp</artifactId>
                <version>${weixin.binarywang.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-pay</artifactId>
                <version>${weixin.binarywang.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-open</artifactId>
                <version>${weixin.binarywang.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-mp</artifactId>
                <version>${weixin.binarywang.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-cp</artifactId>
                <version>${weixin.binarywang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web-services</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <!-- CXF webservice -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-spring-boot-starter-jaxws</artifactId>
                <version>${cxf-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf-spring-boot.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>